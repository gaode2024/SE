*&---------------------------------------------------------------------*
*& Report ZEXPORT_TO_CSV_WITH_QUOTES
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
REPORT ZEXPORT_TO_CSV_WITH_QUOTES.


* 定义变量和内表
DATA: lt_data      TYPE TABLE OF zmy_table,
      ls_data      TYPE zmy_table,
      lv_filename  TYPE string,
      lv_file      TYPE string,
      lv_header    TYPE string,
      lv_line      TYPE string,
      lt_fields    TYPE TABLE OF dfies,
      ls_field     TYPE dfies,
      lv_fieldname TYPE string,
      lv_value     TYPE string.

FIELD-SYMBOLS: <fs_value> TYPE any.
DATA: lv_string TYPE string,
        lv_title  TYPE string,
        lv_file   TYPE string,
        lv_path   TYPE string.

  lv_title = 'Select Directory'.
  lv_string = 'C:\'.

  CALL METHOD cl_gui_frontend_services=>directory_browse
    EXPORTING
      window_title         = lv_title
      initial_folder       = lv_string
    CHANGING
      selected_folder      = lv_path
    EXCEPTIONS
      cntl_error           = 1
      error_no_gui         = 2
      not_supported_by_gui = 3
      OTHERS               = 4.

* 1. 从数据库表中读取数据
SELECT * FROM zmy_table INTO TABLE lt_data.

* 2. 获取表字段信息
CALL FUNCTION 'DDIF_FIELDINFO_GET'
  EXPORTING
    tabname   = 'ZMY_TABLE'
  TABLES
    dfies_tab = lt_fields.

* 3. 定义CSV文件名和路径
lv_filename = lv_path && '/my_data_with_quotes.csv'. " 根据系统环境修改路径
lv_file = lv_filename.

* 4. 打开文件并写入数据
OPEN DATASET lv_file FOR OUTPUT IN TEXT MODE ENCODING DEFAULT.

IF sy-subrc = 0.
* 动态生成表头
  LOOP AT lt_fields INTO ls_field.
    IF lv_header IS INITIAL.
      lv_header = |"{ ls_field-fieldname }"|. " 用双引号包裹字段名
    ELSE.
      CONCATENATE lv_header |"{ ls_field-fieldname }"| INTO lv_header SEPARATED BY ';'.
    ENDIF.
  ENDLOOP.
  TRANSFER lv_header TO lv_file.

* 动态生成数据行
  LOOP AT lt_data INTO ls_data.
    CLEAR lv_line.
    LOOP AT lt_fields INTO ls_field.
      ASSIGN COMPONENT ls_field-fieldname OF STRUCTURE ls_data TO <fs_value>.
      IF sy-subrc = 0.
        lv_value = <fs_value>.
* 用双引号包裹字段值
        IF lv_line IS INITIAL.
          lv_line = |"{ lv_value }"|.
        ELSE.
          CONCATENATE lv_line |"{ lv_value }"| INTO lv_line SEPARATED BY ';'.
        ENDIF.
      ENDIF.
    ENDLOOP.
    TRANSFER lv_line TO lv_file.
  ENDLOOP.

  CLOSE DATASET lv_file.
  WRITE: / 'CSV文件已成功导出至:', lv_filename.
ELSE.
  WRITE: / '无法打开文件:', lv_filename.
ENDIF.
